# Test Secret (cluster KV)
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: cluster-kv
  namespace: ${INGRESS_NAMESPACE}
spec:
  provider: azure
  parameters:
    useVMManagedIdentity: "true"
    userAssignedIdentityID: ${KUBELET_MI_CLIENT_ID}
    keyvaultName: ${CLUSTER_KV_NAME}
    tenantId: ${AKS_TENANT_ID}
    objects: |
      array:
        - |
          objectName: hello
          objectType: secret
---
# Wildcard Cert (*.dev.cloudkube.io)
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: ingress-tls-${AKS_ENV_NAME}-wildcard
  namespace: ${INGRESS_NAMESPACE}
spec:
  provider: azure
  secretObjects:
  - secretName: ingress-tls-${AKS_ENV_NAME}-wildcard
    type: kubernetes.io/tls
    data:
    - objectName: wildcard-${AKS_ENV_NAME}-cloudkube
      key: tls.key
    - objectName: wildcard-${AKS_ENV_NAME}-cloudkube
      key: tls.crt
  parameters:
    usePodIdentity: "false"
    useVMManagedIdentity: "false"
    clientID: ${INGRESS_MI_CLIENT_ID} # workload identity
    keyvaultName: cloudkube-${AKS_ENV_NAME}-kv
    objects: |
      array:
        - |
          objectName: wildcard-${AKS_ENV_NAME}-cloudkube
          objectType: secret
    tenantId: ${AKS_TENANT_ID}

# See also https://azure.github.io/secrets-store-csi-driver-provider-azure/docs/configurations/getting-certs-and-keys/