# https://github.com/kubernetes/ingress-nginx/tree/main/charts/ingress-nginx
# https://github.com/kubernetes/ingress-nginx/blob/main/charts/ingress-nginx/values.yaml
controller:
  replicaCount: 3
  nodeSelector:
    kubernetes.io/os: linux
    agentpool: workloads
  topologySpreadConstraints:
  - maxSkew: 2
    topologyKey: "kubernetes.io/hostname" # spread evenly across nodes
    whenUnsatisfiable: DoNotSchedule # or ScheduleAnyway
    labelSelector:
      matchLabels:
        app: ingress
  podLabels:
    app: ingress
    azure.workload.identity/use: "true"
  service:
    annotations:
      service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: /healthz
      service.beta.kubernetes.io/azure-load-balancer-resource-group: ${INGRESS_STATIC_IP_RG}
      service.beta.kubernetes.io/azure-pip-name: ${INGRESS_STATIC_IP_NAME}
    externalTrafficPolicy: Local
  config:
    enable-modsecurity: true
    enable-owasp-modsecurity-crs: true
  extraArgs:
    default-ssl-certificate: "ingress/ingress-tls-${AKS_ENV_NAME}-wildcard"
  extraVolumes:
  - name: ingress-tls-${AKS_ENV_NAME}-wildcard
    csi:
      driver: secrets-store.csi.k8s.io
      readOnly: true
      volumeAttributes:
        secretProviderClass: "ingress-tls-${AKS_ENV_NAME}-wildcard"
  extraVolumeMounts:
  - name: ingress-tls-${AKS_ENV_NAME}-wildcard
    mountPath: "/mnt/ingress-tls-wildcard"
    readOnly: true
serviceAccount:
  create: false
  name: ingress-workload
defaultBackend:
  nodeSelector:
    kubernetes.io/os: linux
    agentpool: workloads
# rbac:
#   create: false # DO NOT do this. Docs imply should. But don't.